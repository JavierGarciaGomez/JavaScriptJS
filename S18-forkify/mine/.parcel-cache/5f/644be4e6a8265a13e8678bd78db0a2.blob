"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadRecipe = exports.state = void 0;

var config = _interopRequireWildcard(require("./config.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// 287
// 286
const state = {
  recipe: {}
}; // 286

exports.state = state;

const loadRecipe = async function (id) {
  try {
    // this will return a promise
    const res = await fetch(`${config.API}/${id}`); // convert the data to json

    const data = await res.json();
    if (!res.ok) throw new Error(data.message);
    console.log('res', res);
    console.log('data', data);
    const {
      recipe
    } = data.data; //   286 changed to state.recipe

    state.recipe = {
      id: recipe.id,
      title: recipe.title,
      publisher: recipe.publisher,
      sourceUrl: recipe.source_url,
      image: recipe.image_url,
      servings: recipe.servings,
      cookingTime: recipe.cooking_time,
      ingredients: recipe.ingredients
    };
    console.log(state.recipe);
  } catch (error) {
    alert(error);
  }
};

exports.loadRecipe = loadRecipe;