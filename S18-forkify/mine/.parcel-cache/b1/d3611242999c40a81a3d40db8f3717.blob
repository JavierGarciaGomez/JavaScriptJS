"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendJSON = exports.getJSON = void 0;

var _config = require("./config.js");

// 287
const timeout = function (s) {
  return new Promise(function (_, reject) {
    setTimeout(function () {
      reject(new Error(`Request took too long! Timeout after ${s} second`));
    }, s * 1000);
  });
};

const getJSON = async function (url) {
  try {
    // this will return a promise: the fetch is the timeout dont finish or the timeout promise(error)
    const res = await Promise.race([fetch(url), timeout(_config.TIMEOUT_SEC)]); // convert the data to json

    const data = await res.json();
    if (!res.ok) throw new Error(data.message);
    console.log('res', res);
    console.log('data', data);
    return data;
  } catch (err) {
    //   rethrowing the error to be handle in the caller
    throw err;
  }
}; // 302
// export const sendJSON = async function (url, uploadData) {


exports.getJSON = getJSON;

const sendJSON = async function (url) {
  try {
    const fetchPro = fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(uploadData)
    });
    const res = await Promise.race([fetchPro, timeout(_config.TIMEOUT_SEC)]);
    const data = await res.json();
    if (!res.ok) throw new Error(`${data.message} (${res.status})`);
    return data;
  } catch (err) {
    throw err;
  }
};

exports.sendJSON = sendJSON;